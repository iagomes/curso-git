<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>Bruno_Amorim</name>
        <label>Bruno Amorim</label>
        <locationX>8058</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>bruno.amorim@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Comercial_Coordinator_0</name>
        <label>Comercial Coordinator</label>
        <locationX>12018</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_sector.Coordenador__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Default_outcome</name>
        <label>Default outcome</label>
        <locationX>809</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>AtendimentoAoClienteQueue</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>NewStatus</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Em Andamento</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Default_Torre_de_controle</name>
        <label>Default Torre de controle</label>
        <locationX>11490</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>TorreDeControle</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Elismara_Lima</name>
        <label>Elismara Lima</label>
        <locationX>10962</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>elismara.lima@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Emilly_Martins</name>
        <label>Emilly Martins</label>
        <locationX>4626</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>emilly.martins@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Evelin_Souza</name>
        <label>Evelin Souza</label>
        <locationX>6210</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>evelin.souza@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Isabely_Rodrigues</name>
        <label>Isabely Rodrigues</label>
        <locationX>11226</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>isabely.rodrigues@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Kaique_Oliveira</name>
        <label>Kaique Oliveira</label>
        <locationX>4362</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>kaique.oliveira@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Order_Owner</name>
        <label>Order Owner</label>
        <locationX>1221</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.NotaFiscal__r.Pedido__r.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Was_already_in_this_queue_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Rian_Sousa</name>
        <label>Rian Sousa</label>
        <locationX>8850</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>rian.sousa@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Rony_Sampaio</name>
        <label>Rony Sampaio</label>
        <locationX>6738</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>rony.sampaio@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_previous_owner</name>
        <label>Set previous owner</label>
        <locationX>842</locationX>
        <locationY>1511</locationY>
        <assignmentItems>
            <assignToReference>$Record.Previous_Owner__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record__Prior.OwnerId</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_queue_id</name>
        <label>Set queue id</label>
        <locationX>1370</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Queue_Id.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Owner_and_status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_to_previous_owner</name>
        <label>Set to previous owner</label>
        <locationX>974</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Previous_Owner__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Owner_and_status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_user_id</name>
        <label>Set user id</label>
        <locationX>7926</locationX>
        <locationY>1187</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_User_Id.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Was_already_in_this_queue_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>To_Cadastro</name>
        <label>To Cadastro</label>
        <locationX>3834</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Registration</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>To_Comercial</name>
        <label>To Comercial</label>
        <locationX>13602</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Comercial</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>To_Devolu_o</name>
        <label>To Devolução</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Devolucao</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Submit_to_approval__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>To_Regulat_rios</name>
        <label>To Regulatórios</label>
        <locationX>5330</locationX>
        <locationY>1559</locationY>
        <assignmentItems>
            <assignToReference>QueueToForwardTo</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Regulatorios</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Queue_Id</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Vitoria_Nascimento</name>
        <label>Vitoria Nascimento</label>
        <locationX>7266</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>UserEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>vitoria.nascimento@grupoelfa.com.br</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_User_Id</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Does_the_previous_owner_department_matches_the_queue</name>
        <label>Does the previous owner department matches the queue?</label>
        <locationX>1172</locationX>
        <locationY>1031</locationY>
        <defaultConnector>
            <targetReference>Set_queue_id</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_it_has_previous</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Previous_Owner__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Previous_Owner__r.Department</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_Queue_Id.Name</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_to_previous_owner</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Fila_de_distribui_o_Transportes</name>
        <label>Fila de distribuição Transportes</label>
        <locationX>7926</locationX>
        <locationY>671</locationY>
        <defaultConnector>
            <targetReference>Default_Torre_de_controle</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Torre de controle</defaultConnectorLabel>
        <rules>
            <name>Acre</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AC</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Kaique_Oliveira</targetReference>
            </connector>
            <label>Acre</label>
        </rules>
        <rules>
            <name>Alagoas</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AL</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Emilly_Martins</targetReference>
            </connector>
            <label>Alagoas</label>
        </rules>
        <rules>
            <name>Amazonas</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AM</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Isabely_Rodrigues</targetReference>
            </connector>
            <label>Amazonas</label>
        </rules>
        <rules>
            <name>Amap</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AP</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Kaique_Oliveira</targetReference>
            </connector>
            <label>Amapá</label>
        </rules>
        <rules>
            <name>Bahia</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BA</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Emilly_Martins</targetReference>
            </connector>
            <label>Bahia</label>
        </rules>
        <rules>
            <name>Cear</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Rony_Sampaio</targetReference>
            </connector>
            <label>Ceará</label>
        </rules>
        <rules>
            <name>Distrito_Federal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>DF</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Vitoria_Nascimento</targetReference>
            </connector>
            <label>Distrito Federal</label>
        </rules>
        <rules>
            <name>Esp_rito_Santo</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ES</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evelin_Souza</targetReference>
            </connector>
            <label>Espírito Santo</label>
        </rules>
        <rules>
            <name>Goi_s</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GO</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Vitoria_Nascimento</targetReference>
            </connector>
            <label>Goiás</label>
        </rules>
        <rules>
            <name>Maranh_o</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MA</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Rony_Sampaio</targetReference>
            </connector>
            <label>Maranhão</label>
        </rules>
        <rules>
            <name>Minas_Gerais</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MG</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evelin_Souza</targetReference>
            </connector>
            <label>Minas Gerais</label>
        </rules>
        <rules>
            <name>Mato_Grosso_do_Sul</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MS</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Vitoria_Nascimento</targetReference>
            </connector>
            <label>Mato Grosso do Sul</label>
        </rules>
        <rules>
            <name>Mato_Grosso</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MT</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Vitoria_Nascimento</targetReference>
            </connector>
            <label>Mato Grosso</label>
        </rules>
        <rules>
            <name>Par</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PA</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Isabely_Rodrigues</targetReference>
            </connector>
            <label>Pará</label>
        </rules>
        <rules>
            <name>Para_ba</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PB</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Bruno_Amorim</targetReference>
            </connector>
            <label>Paraíba</label>
        </rules>
        <rules>
            <name>Pernambuco</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Isabely_Rodrigues</targetReference>
            </connector>
            <label>Pernambuco</label>
        </rules>
        <rules>
            <name>Piau</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PI</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Rony_Sampaio</targetReference>
            </connector>
            <label>Piauí</label>
        </rules>
        <rules>
            <name>Paran</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PR</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Rian_Sousa</targetReference>
            </connector>
            <label>Paraná</label>
        </rules>
        <rules>
            <name>Rio_de_Janeiro</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RJ</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evelin_Souza</targetReference>
            </connector>
            <label>Rio de Janeiro</label>
        </rules>
        <rules>
            <name>Rio_Grande_do_Norte</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RN</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Bruno_Amorim</targetReference>
            </connector>
            <label>Rio Grande do Norte</label>
        </rules>
        <rules>
            <name>Rond_nia</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RO</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Kaique_Oliveira</targetReference>
            </connector>
            <label>Rondônia</label>
        </rules>
        <rules>
            <name>Roraima</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RR</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Kaique_Oliveira</targetReference>
            </connector>
            <label>Roraima</label>
        </rules>
        <rules>
            <name>Rio_Grande_do_Sul</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RS</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Rian_Sousa</targetReference>
            </connector>
            <label>Rio Grande do Sul</label>
        </rules>
        <rules>
            <name>Santa_Catarina</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SC</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Rian_Sousa</targetReference>
            </connector>
            <label>Santa Catarina</label>
        </rules>
        <rules>
            <name>Sergipe</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Bruno_Amorim</targetReference>
            </connector>
            <label>Sergipe</label>
        </rules>
        <rules>
            <name>S_o_Paulo</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SP</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Elismara_Lima</targetReference>
            </connector>
            <label>São Paulo</label>
        </rules>
        <rules>
            <name>Tocantins</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.BillingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TO</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Isabely_Rodrigues</targetReference>
            </connector>
            <label>Tocantins</label>
        </rules>
    </decisions>
    <decisions>
        <name>From_where</name>
        <label>From where?</label>
        <locationX>5330</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Main_hub</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>From Atendimento ao Cliente</defaultConnectorLabel>
        <rules>
            <name>From_Comercial</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Comercial</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.Department</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Comercial</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Default_outcome</targetReference>
            </connector>
            <label>From Comercial</label>
        </rules>
        <rules>
            <name>From_Devolu_o</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Devolucao</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.Department</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Devolução</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Hub_devolucao</targetReference>
            </connector>
            <label>From Devolução</label>
        </rules>
        <rules>
            <name>From_Regulat_rios</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regulatorios</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.Department</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regulatórios</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>US141_Desvio_de_Qualidade</targetReference>
            </connector>
            <label>From Regulatórios</label>
        </rules>
        <rules>
            <name>From_Torre_de_Controle</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>TorreDeControle</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.Department</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Torre de Controle</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Default_outcome</targetReference>
            </connector>
            <label>From Torre de Controle</label>
        </rules>
        <rules>
            <name>From_Cadastro</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Registration</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.Department</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cadastro</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Default_outcome</targetReference>
            </connector>
            <label>From Cadastro</label>
        </rules>
    </decisions>
    <decisions>
        <description>US087</description>
        <name>Hub_devolucao</name>
        <label>Hub</label>
        <locationX>2250</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>Default_outcome</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Atendimento ao Cliente</defaultConnectorLabel>
        <rules>
            <name>US087_Regulat_rios_Desvio_de_Qualidade</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Desvio de Qualidade</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_Regulat_rios</targetReference>
            </connector>
            <label>US087 Regulatórios - Desvio de Qualidade</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_it_not_customer_service</name>
        <label>Is it not customer service?</label>
        <locationX>446</locationX>
        <locationY>1031</locationY>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No_it_is_not_customer_service</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$User.Department</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Atendimento ao Cliente</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>AtendimentoAoClienteQueue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Default_outcome</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Main_hub</name>
        <label>Main hub</label>
        <locationX>8762</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>Default_outcome</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Atendimento ao cliente</defaultConnectorLabel>
        <rules>
            <name>US042_Regulat_rios</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Regulatórios</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_Regulat_rios</targetReference>
            </connector>
            <label>US042 Regulatórios</label>
        </rules>
        <rules>
            <name>US040_Cadastro</name>
            <conditionLogic>1 OR (2 AND 3 AND 4 AND 5) OR (2 AND 6 AND 7) OR (2 AND 8 AND 9 AND 10)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cadastro</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incidente</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido não faturado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido Parado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Submotivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cadastro do Cliente</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Devolução</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cadastro</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido não faturado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido Parado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Submotivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cadastro do Produto</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_Cadastro</targetReference>
            </connector>
            <label>US040,146,149,147,148,150,151 Cadastro</label>
        </rules>
        <rules>
            <name>US028_US050_Devolu_o</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Devolução</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.StatusResponsibleArea__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bonificação não autorizada</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_Devolu_o</targetReference>
            </connector>
            <label>US028 US050 Devolução</label>
        </rules>
        <rules>
            <name>US065_US066_Torre_de_controle</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incidente</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Tracking do Pedido</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Falta de Informação no COMPROVEI/ LYNCROS</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Troca de Data de Entrega</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Fila_de_distribui_o_Transportes</targetReference>
            </connector>
            <label>US065 US066 CS-432 Torre de controle</label>
        </rules>
        <rules>
            <name>US073_Troca_de_Data_de_Entrega</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incidente</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Tracking do Pedido</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Troca de Data de Entrega</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Order_Owner</targetReference>
            </connector>
            <label>US073 Troca de Data de Entrega</label>
        </rules>
        <rules>
            <name>US074_Vendas</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reclamação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reclamação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Atendimento</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Submotivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Vendas</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_sector</targetReference>
            </connector>
            <label>US074 Vendas</label>
        </rules>
        <rules>
            <name>US075_Falta_de_Estoque</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reclamação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reclamação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Falta de Estoque</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Order_Owner</targetReference>
            </connector>
            <label>US075 Falta de Estoque</label>
        </rules>
        <rules>
            <name>US076_Pedido_N_o_Digitado_US077_Entrega_Programada</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Solicitação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Faturamento Pedido</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido não digitado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Entrega Programada</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Order_Owner</targetReference>
            </connector>
            <label>US076 US077  Pedido Não Digitado/Entrega Programada</label>
        </rules>
        <rules>
            <name>US069_US070_US071_US072_Pedido_N_o_Faturado</name>
            <conditionLogic>1 AND 2 AND 3 AND (4 OR 5 OR 6 OR 7)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incidente</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido não faturado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido Parado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Submotivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Erro de Estoque</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Submotivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Alvará Vencido</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Submotivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pedido não Digitado</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Submotivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bloqueado por crédito</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Order_Owner</targetReference>
            </connector>
            <label>US069 US070 US071 US072 Pedido Não Faturado</label>
        </rules>
        <rules>
            <name>US136comercialSLAmotivoValidadeCurta</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Solicitação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Carta de Comprometimento de Troca</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Validade Curta</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Order_Owner</targetReference>
            </connector>
            <label>US136 - Comercial SLA (Motivo: Validade Curta)</label>
        </rules>
        <rules>
            <name>US137comercialSLArazaoCotacao</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Solicitação</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Razao__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cotação</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_Comercial</targetReference>
            </connector>
            <label>US137 - Comercial: SLA (Razão: Cotação)</label>
        </rules>
    </decisions>
    <decisions>
        <description>US050</description>
        <name>Priority_forwarding</name>
        <label>Priority forwarding</label>
        <locationX>2690</locationX>
        <locationY>311</locationY>
        <defaultConnector>
            <targetReference>From_where</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Regular forward</defaultConnectorLabel>
        <rules>
            <name>US050_Bonifica_o_n_o_autorizada</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StatusResponsibleArea__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bonificação não autorizada</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_Devolu_o</targetReference>
            </connector>
            <label>US050 Bonificação não autorizada</label>
        </rules>
        <rules>
            <name>US050_Faturar_novo_pedido_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StatusResponsibleArea__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Faturar novo pedido</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Order_Owner</targetReference>
            </connector>
            <label>US050 Faturar novo pedido</label>
        </rules>
    </decisions>
    <decisions>
        <name>US141_Desvio_de_Qualidade</name>
        <label>US141 Desvio de Qualidade</label>
        <locationX>2734</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>Default_outcome</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Atendimento ao cliente</defaultConnectorLabel>
        <rules>
            <name>N_o_procedente</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Motivo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Desvio de Qualidade</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AnaliseDoCaso__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Não Procedente</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_Devolu_o</targetReference>
            </connector>
            <label>Não procedente</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_a_user</name>
        <label>Was a user?</label>
        <locationX>974</locationX>
        <locationY>1391</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_it_was_user</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_previous_owner</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_already_in_this_queue</name>
        <label>Was already in this queue?</label>
        <locationX>809</locationX>
        <locationY>911</locationY>
        <defaultConnector>
            <targetReference>Does_the_previous_owner_department_matches_the_queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_it_was_in_this_queue</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Id.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Queue_Id.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Owner:User.Department</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_it_not_customer_service</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_already_in_this_queue_0</name>
        <label>Was already in this queue?</label>
        <locationX>1221</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>Set_Owner_and_status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_it_was_in_this_queue_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>QueueToForwardTo</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Default_outcome</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <interviewLabel>Case Forward To {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Forward To</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Queue_Id</name>
        <label>Get Queue Id</label>
        <locationX>809</locationX>
        <locationY>791</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Was_already_in_this_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>QueueToForwardTo</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_sector</name>
        <label>Get sector</label>
        <locationX>12018</locationX>
        <locationY>671</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Comercial_Coordinator_0</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Default_outcome</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Vendedor__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.NotaFiscal__r.Pedido__r.CreatedById</elementReference>
            </value>
        </filters>
        <filters>
            <field>Conta__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Setorizacao__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User_Id</name>
        <label>Get User Id</label>
        <locationX>7926</locationX>
        <locationY>1067</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_user_id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>UserEmail</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_Owner_and_status</name>
        <label>Set Owner and status</label>
        <locationX>974</locationX>
        <locationY>1271</locationY>
        <connector>
            <targetReference>Was_a_user</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>QueueToForwardTo</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>NewStatus</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>2564</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Priority_forwarding</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Forward__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>NewStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Em Espera</stringValue>
        </value>
    </variables>
    <variables>
        <name>QueueToForwardTo</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
